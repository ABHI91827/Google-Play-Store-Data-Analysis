# -*- coding: utf-8 -*-
"""GOOGLE PLAY STORE DATA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13QL-l_jSxJtgFGBUyBY3hr3YZdW6M02M
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('https://raw.githubusercontent.com/krishnaik06/playstore-Dataset/main/googleplaystore.csv')

df.head()

df.tail()

df.info()

df.isnull().sum()

df['Reviews'].unique(

)

df['Reviews'].astype(int)

df[~df['Reviews'].str.isnumeric()]

"""# **DATA CLEANING**"""

df_copy=df.copy()

df_copy=df_copy.drop(df_copy.index[10472])

df_copy[~df_copy['Reviews'].str.isnumeric()]

df_copy['Reviews']=df_copy['Reviews'].astype(int)

df_copy.info()

df_copy['Size'].unique()

df_copy['Size']=df_copy['Size'].str.replace('M','000')
df_copy['Size']=df_copy['Size'].str.replace('k','')
df_copy['Size']=df_copy['Size'].replace('Varies with device',np.nan)
df_copy['Size']=df_copy['Size'].astype(float)

df_copy['Size']

df_copy.info()

df_copy.head(2)

df_copy['Installs']

df_copy['Installs'].unique()

df_copy['Price'].unique()

df_copy['Installs'].isnull().sum()

df_copy['Price'].isnull().sum()

chars_to_remove=['+',',','$']
cols_to_clean=['Installs','Price']
for item in chars_to_remove:
  for cols in cols_to_clean:
    df_copy[cols]=df_copy[cols].str.replace(item,'')

df_copy['Installs'].unique()

df_copy['Price'].unique()

df_copy['Installs']=df_copy['Installs'].astype(int)

df_copy['Price']=df_copy['Price'].astype(float)

df_copy.info()

df_copy.head(2)

df_copy['Last Updated']=pd.to_datetime(df_copy['Last Updated'])

df_copy['Last Updated']

df_copy['Last Updated'].dt.day

df_copy.info()

df_copy.head(2
             )

df_copy['Type'].unique()

df_copy['Type'].isnull().sum()

df_copy[df_copy['Type'].isnull()]

df_copy['Current Ver'].unique()

df_copy['Current Ver'].isnull().sum()

df_copy[df_copy['Current Ver'].isnull()]

df_copy.to_csv('data/google_cleaned.csv', index=False)

"""# **EDA**"""

df_copy[df_copy.duplicated('App')].shape

df_copy=df_copy.drop_duplicates(subset='App',keep='first')

df_copy.shape

numerical_feature=[feature for feature in df_copy.columns if df_copy[feature].dtype !='O']
categorical_feature=[feature for feature in df_copy.columns if df_copy[feature].dtype=='O']
print('we have {} numerical_feature:{}'.format(len(numerical_feature),numerical_feature))
print('we have {} categorical_feature:{}'.format(len(categorical_feature),categorical_feature))

"""## 3.2 Feature Information
1. App :- Name of the App
2. Category :- Category under which the App falls.
3. Rating :- Application's rating on playstore
4. Reviews :- Number of reviews of the App.
5. Size :- Size of the App.
6. Install :- Number of Installs of the App
7. Type :- If the App is free/paid
8. Price :- Price of the app (0 if it is Free)
9. Content Rating :- Appropiate Target Audience of the App.
10. Genres:- Genre under which the App falls.
11. Last Updated :- Date when the App was last updated
12. Current Ver :- Current Version of the Application
13. Android Ver :- Minimum Android Version required to run the App
"""

#proportion of count data in categorical columns
for cols in categorical_feature:
  print(df_copy[cols].value_counts(normalize=True)*100)
  print('--------------------------')

#proportion of count data on numerical columns
plt.figure(figsize=(10,10))
plt.suptitle('Univariate Analysis of Numerical Features',fontsize=20,fontweight='bold',alpha=0.8)
for i in range(0,len(numerical_feature)):
  plt.subplot(5,3,i+1)
  sns.kdeplot(x=df_copy[numerical_feature[i]],shade=True, color='r')
  plt.xlabel(numerical_feature[i])
  plt.tight_layout()

"""# **observations**


*  rating and last updated is left skewed while Reviews,size,installs,price are right skewed






"""

plt.figure(figsize=(10,10))
plt.suptitle('Univariate Analysis of categorical features',fontsize=15,fontweight='bold',alpha=0.8)
category=['Type','Content Rating']
for i in range(0,len(category)):
  plt.subplot(2,2,i+1)
  sns.countplot(x=df_copy[category[i]],palette="Set2")
  plt.xlabel(category[i])
  plt.xticks(rotation=45)
  plt.tight_layout()

"""# questions

1.which is the most popular app category?
"""

df_copy['Category'].value_counts().plot.pie(y=df_copy['Category'],figsize=(18,17),autopct='%1.1f')

"""# **observation**


*   Family,Game,Tools kinda of appa are very popular in playstore
*    Beatuty,comics,arts and weather kinds of apps are very less in playstore

2.Top 10 categories
"""

category=pd.DataFrame(df_copy['Category'].value_counts())
category.rename(columns={'category':'count'},inplace=True)

category

plt.figure(figsize=(15,6))
sns.barplot(x=category.index[:10],y='count',data=category[:10],palette='hls')
plt.title('Top 10 App Category')
plt.xticks(rotation=90)
plt.show()

"""# **INSIGHTS**


1. Family category has the most number of apps with 18% of apps belonging to it, followed by Games category which has 11% of the apps.
2. Least number of apps belong to the Beauty category with less than 1% of the total apps belonging to it.




"""

df_copy.head()

df_car_installs=df_copy.groupby(['Category'])['Installs'].sum().sort_values(ascending=False).reset_index()
df_car_installs.Installs=df_car_installs.Installs/1000000000
df2=df_car_installs.head(10)
plt.figure(figsize=(15,6))
sns.set_context("talk")
sns.set_style("darkgrid")
a=sns.barplot(x = 'Installs' , y = 'Category' , data = df2 )
a.set_xlabel('No. of Installations in Billions')
a.set_ylabel('')
a.set_title("Most Popular Categories in Play Store", size = 20)

"""# Insights
1. Out of all the categories "GAME" has the most number of Installations.
2. With almost 35 Billion Installations GAME is the most popular Category in Google App store**

**3.What are the Top 5 most installed Apps in Each popular Categories ??**
"""

df_app_installs=df_copy.groupby(['Category','App'])['Installs'].sum().reset_index()
df_app_installs=df_app_installs.sort_values('Installs',ascending=False)
apps=['GAME','COMMUNICATION','PRODUCTIVITY','SOCIAL']
sns.set_context("poster")
sns.set_style("darkgrid")
plt.figure(figsize=(40,30))
for i,app in enumerate(apps):
  df2=df_app_installs[df_app_installs.Category==app]
  df3=df2.head(5)
  plt.subplot(4,2,i+1)
  sns.barplot(data= df3,x= 'Installs' ,y='App' )
  plt.xlabel('Installation in Millions')
  plt.ylabel('')
  plt.title(app,size = 20)

plt.tight_layout()
plt.subplots_adjust(hspace= .3)
plt.show()

"""## Insights
- Most popular game is Subway Surfers.
- Most popular communication app is Hangouts.
- Most popular productivity app is Google Drive.
- Most popular social app is Instagram.

**4.How many apps are there on Google Play Store which get 5 ratings??**
"""

rating = df_copy.groupby(['Category','Installs', 'App'])['Rating'].sum().sort_values(ascending = False).reset_index()

toprating_apps = rating[rating.Rating == 5.0]
print("Number of 5 rated apps",toprating_apps.shape[0])
toprating_apps.head(1)

"""## Result
- There are 271 five rated apps on Google Play store
- Top most is 'CT Brain Interpretation' from 'Family' Category
"""